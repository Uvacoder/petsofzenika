{"version":3,"sources":["components/Header/Header.js","components/AnimalCard/AnimalCard.js","App.js","index.js"],"names":["Title","styled","h1","_templateObject","Header","react_default","a","createElement","Fragment","role","aria-label","Wrapper","div","AnimalCard_templateObject","PetImage","img","_templateObject2","PetName","h2","_templateObject3","AnimalCard","_ref","image","name","src","App_templateObject","Column","App_templateObject2","NoPetText","p","App_templateObject3","App","_useState","useState","_useState2","Object","slicedToArray","imageColumns","setImageColumn","useEffect","shuffleImages","animals","sort","Math","random","size","round","length","map","_","index","slice","filter","element","components_Header_Header","App_Wrapper","col","key","path","components_AnimalCard_AnimalCard","process","ReactDOM","render","src_App","document","getElementById"],"mappings":"qaAGA,IAAMA,EAAQC,IAAOC,GAAVC,KAoBIC,EAVA,WACb,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACP,EAAD,KACEK,EAAAC,EAAAC,cAAA,QAAME,KAAK,MAAMC,aAAW,IAA5B,4BADF,mBAC4DL,EAAAC,EAAAC,cAAA,QAAME,KAAK,MAAMC,aAAW,IAA5B,qwBCdlE,IAAMC,EAAUV,IAAOW,IAAVC,KAQPC,EAAWb,IAAOc,IAAVC,KAYRC,EAAUhB,IAAOiB,GAAVC,KAqBEC,EATI,SAAAC,GAAqB,IAAlBC,EAAkBD,EAAlBC,MAAOC,EAAWF,EAAXE,KAC3B,OACElB,EAAAC,EAAAC,cAACI,EAAD,KACEN,EAAAC,EAAAC,cAACO,EAAD,CAAUU,IAAKF,IACfjB,EAAAC,EAAAC,cAACU,EAAD,KAAUM,6ZChChB,IAAMZ,EAAUV,IAAOW,IAAVa,KAQPC,EAASzB,IAAOW,IAAVe,KAONC,EAAY3B,IAAO4B,EAAVC,KA+CAC,EA3BH,WAAM,IAAAC,EACuBC,mBAAS,IADhCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTK,EADSH,EAAA,GACKI,EADLJ,EAAA,GAOhB,OAJAK,oBAAU,WACRD,EAhBkB,WACpB,IAAIE,EAAgBC,EAAQC,KAAK,kBAAMC,KAAKC,SAAW,KACjDC,EAAOF,KAAKG,MAAON,EAAcO,OAAS,GAOhD,OANgBP,EAAcQ,IAAI,SAACC,EAAGC,GAAJ,OAChCA,EAAQL,IAAS,EACbL,EAAcW,MAAMD,EAAOA,EAAQL,GACnC,OACHO,OAAO,SAAAC,GAAO,OAAIA,IASJb,KACd,IAGDnC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAC+C,EAAD,MACAjD,EAAAC,EAAAC,cAACgD,EAAD,KACGlB,EAAaU,OAAS,EAAIV,EAAaW,IAAI,SAACQ,EAAKN,GAChD,OACE7C,EAAAC,EAAAC,cAACmB,EAAD,CAAQ+B,IAAKP,GACVM,EAAIR,IAAI,SAAA3B,GAAA,IAAGE,EAAHF,EAAGE,KAAMmC,EAATrC,EAASqC,KAAT,OAAoBrD,EAAAC,EAAAC,cAACoD,EAAD,CAAYpC,KAAMA,EAAMD,MAAOsC,wBAAsCF,EAAMD,IAAKlC,SAIjHlB,EAAAC,EAAAC,cAACqB,EAAD,sBACgBvB,EAAAC,EAAAC,cAAA,QAAME,KAAK,MAAMC,aAAW,IAA5B,oBCxD1BmD,IAASC,OAAOzD,EAAAC,EAAAC,cAACwD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.d74a0b1f.chunk.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Title = styled.h1`\n  font-size: 3rem;\n  font-weight: 300;\n  text-align: center;\n\n  @media (max-width: 768px) {\n    font-size: 2rem;\n  }\n`\n\nconst Header = () => {\n  return (\n    <>\n      <Title>\n        <span role=\"img\" aria-label=\"\">🐱🐶</span> Pets of Zenika <span role=\"img\" aria-label=\"\">🦄🐰</span>\n      </Title>\n    </>\n  )\n}\n\nexport default Header\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Wrapper = styled.div`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n`\n\nconst PetImage = styled.img`\n  border: 2px solid rgba(0, 0, 0, 0.8);\n  border-radius: 8px;\n  margin-top: 1%;\n  vertical-align: middle;\n  max-width: 100%;\n\n  @media (max-width: 768px) {\n    max-height: 150px;\n  }\n`\n\nconst PetName = styled.h2`\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  margin: 0;\n  padding: 0.2rem 0;\n  font-weight: 300;\n  background-color: rgba(0, 0, 0, 0.8);\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n`\n\nconst AnimalCard = ({ image, name }) => {\n  return (\n    <Wrapper>\n      <PetImage src={image} />\n      <PetName>{name}</PetName>\n    </Wrapper>\n  )\n}\n\nexport default AnimalCard\n","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\n\nimport animals from \"./animals.json\"\nimport { Header } from \"components/Header\"\nimport { AnimalCard } from \"components/AnimalCard\"\n\nconst Wrapper = styled.div`\n  margin: 2rem 0;\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0;\n  justify-content: center;\n`\n\nconst Column = styled.div`\n  flex: 25%;\n  max-width: 25%;\n  padding: 0.25rem;\n  list-style: none;\n`\n\nconst NoPetText = styled.p`\n  font-size: 2rem;\n`\n\n/**\n * Shuffle our pet images and create 3 array of images for our columns\n * This is a weird work around to have images that fit no matter their size\n */\nconst shuffleImages = () => {\n  let shuffleImages = animals.sort(() => Math.random() - 0.5)\n  const size = Math.round((shuffleImages.length / 3))\n  const columns = shuffleImages.map((_, index) => (\n    index % size === 0\n      ? shuffleImages.slice(index, index + size)\n      : null\n  )).filter(element => element)\n\n  return columns\n}\n\nconst App = () => {\n  const [imageColumns, setImageColumn] = useState([])\n\n  useEffect(() => {\n    setImageColumn(shuffleImages())\n  }, [])\n\n  return (\n    <>\n      <Header />\n      <Wrapper>\n        {imageColumns.length > 0 ? imageColumns.map((col, index) => {\n          return (\n            <Column key={index}>\n              {col.map(({ name, path }) => <AnimalCard name={name} image={process.env.PUBLIC_URL + '/images/' + path} key={name} />)}\n            </Column>\n          )\n        }) :\n          <NoPetText>\n            No pet found. <span role=\"img\" aria-label=\"\">😿</span>\n          </NoPetText>\n        }\n      </Wrapper>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}